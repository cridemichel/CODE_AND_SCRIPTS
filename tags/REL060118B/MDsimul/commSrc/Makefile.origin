#commSrc Makefile
PERC=$(HOME)/MDsimul

# ======================================
#export 
COMM=$(PERC)/commSrc

#export CC=gcc
#export MPIDIR = $(HOME)/mpich-1.2.0
#export CC= $(MPIDIR)/bin/mpicc
#export CC= mpicc_mpich
CC= cc
#CFLAGS=-Wall -mcpu=i686 -O3\
	-frerun-cse-after-loop -fstrength-reduce -fexpensive-optimizations\
        -felide-constructors -malign-loops=2 -malign-jumps=2\
	-malign-functions=2
#CFLAGS  = -O3 -n32 -mips4 -Ofast=ip27 -OPT:IEEE_arithmetic=3 -IPA
#CFLAGS = -Wall -m486 -fomit-frame-pointer -finline-functions -O2
CFLAGS= -O3 -lmpi

# MACROS passed to the pre-processor
#export 
MACROS=-DORIGIN -DMD_GRAVITY -DXDISP -DATPTENS -UMOLPTENS -UATPRESS -DSOFT_SPHERE -DMPI #-DPRINTER_PROC
# ATPTENS defined(-DATPTENS -U... undefined)=>calculate atomic pressure tensor
# MOLPTENS defined => calculate mlecular pressor tensor
# ATPRESS defined => calculate atomic pressure(if ATPTENS defined the atomic
# pressure is automatically calculate)

#export 
BIN = $(PERC)/bin

#directories to search for #include
#export 
INCLUDES = -I$(PERC) -I$(MPIDIR)/include  -I. -I$(PERC)/include -I$(COMM)

COMMEXECS = md2ascii log md2ascii calcEta bak2cor
COMMEXECS_PT = md2ascii_PT log calcEta bak2cor
COMMEXECS_DPT = md2ascii_DPT log calcEta bak2cor
OBJS= mdutil.o mdsimul.o mdio.o mdchoose.o mdarray.o mdinit.o scalProc.o bak2cor.o
OBJSMIX= mdutil.o mdsimul.o mdio.o mdchoose.o mdarrayMIX.o mdinit.o bak2cor.o
OBJSPT= mdutil.o mdsimul_PT.o mdio.o mdchoose.o mdarray_PT.o mdinit_PT.o bak2cor.o#scalProc_PT.o
OBJSDPT= mdutil.o mdsimul_PT.o mdio_DPT.o mdchoose_DPT.o mdarray_DPT.o mdinit_DPT.o bak2cor.o#scalProc_PT.o

common: $(COMMEXECS) $(OBJS)
commonMIX: $(COMMEXECS) $(OBJSMIX)
commonPT: $(COMMEXECS_PT) $(OBJSPT)
commonDPT: $(COMMEXECS_DPT) $(OBJSDPT)
# generate executable directly
chkStatus: chkStatus.o mdio.o mdutil.o
	$(CC)  $(MACROS) $(INCLUDES) -o chkStatus chkStatus.o mdio.o mdutil.o $(LDFLAGS) -lmpi

log: log.c $(COMM)/mdsimdep.h $(COMM)/mdsimul.h
	$(CC) $(CFLAGS) $(MACROS) $(INCLUDES) log.c -o $(BIN)/log  $(LDFLAGS)

md2ascii: md2ascii.o
	$(CC) $(INCLUDES) $(CFLAGS) -o $(BIN)/md2ascii md2ascii.o -lfastm -lm $(LDFLAGS)

md2ascii_PT: md2ascii_PT.o
	$(CC) $(INCLUDES) -o $(BIN)/md2ascii md2ascii_PT.o -lfastm -lm $(LDFLAGS)

md2ascii_DPT: md2ascii_DPT.o
	$(CC)  $(INCLUDES) $(CFLAGS) -o $(BIN)/md2ascii md2ascii_DPT.o -lfastm -lm $(LDFLAGS)

calcEta: calcEta.o
	$(CC)  $(MACROS) $(CFLAGS) calcEta.o -o $(BIN)/calcEta $(LDFLAGS)  -lfastm -lm

bak2cor: bak2cor.o
	$(CC) $(MACROS) $(CFLAGS) bak2cor.o -o $(BIN)/bak2cor $(LDFLAGS) -lfastm -lm 

mdio.o : mdio.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) $(INCLUDES)  -c -o mdio.o mdio.c 

mdio_DPT.o : mdio_DPT.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) $(INCLUDES)  -c -o mdio_DPT.o mdio_DPT.c 

mdchoose.o : mdchoose.c mdsimul.h mdsimdep.h 
	$(CC) $(CFLAGS) $(MACROS) $(INCLUDES)  -c -o mdchoose.o mdchoose.c 

mdchoose_DPT.o : mdchoose_DPT.c mdsimul.h mdsimdep.h 
	$(CC) $(CFLAGS) $(MACROS) $(INCLUDES)  -c -o mdchoose_DPT.o mdchoose_DPT.c 

mdsimul.o: mdsimul.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdsimul.o mdsimul.c

mdsimul_PT.o: mdsimul_PT.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdsimul_PT.o mdsimul_PT.c

md2ascii.o: md2ascii.c mdsimdep.h mdsimul.h 
	$(CC) $(CFLAGS) $(MACROS) $(INCLUDES)  -c -o md2ascii.o md2ascii.c 

md2ascii_PT.o: md2ascii_PT.c mdsimdep.h mdsimul.h 
	$(CC) $(CFLAGS) $(MACROS) $(INCLUDES)  -c -o md2ascii_PT.o md2ascii_PT.c 

md2ascii_DPT.o: md2ascii_DPT.c mdsimdep.h mdsimul.h 
	$(CC) $(CFLAGS) $(MACROS) $(INCLUDES)  -c -o md2ascii_DPT.o md2ascii_DPT.c 

scalProc.o: scalProc.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS)  $(INCLUDES) -c  -o scalProc.o scalProc.c

scalProc_PT.o: scalProc_PT.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS)  $(INCLUDES) -c  -o scalProc_PT.o scalProc_PT.c

mdinit.o: mdinit.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdinit.o mdinit.c

mdinit_PT.o: mdinit_PT.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdinit_PT.o mdinit_PT.c

mdinit_DPT.o: mdinit_DPT.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdinit_DPT.o mdinit_DPT.c

mdarray.o : mdarray.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdarray.o mdarray.c

mdarray_PT.o : mdarray_PT.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdarray_PT.o mdarray_PT.c

mdarray_DPT.o : mdarray_DPT.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdarray_DPT.o mdarray_DPT.c

mdarrayMIX.o : mdarrayMIX.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdarrayMIX.o mdarrayMIX.c


mdutil.o: mdutil.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o mdutil.o mdutil.c

bak2cor.o: bak2cor.c mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o bak2cor.o bak2cor.c

calcEta.o: calcEta.c calcEta.h mdsimul.h mdsimdep.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o calcEta.o calcEta.c

chkStatus.o: chkStatus.c mdsimul.h
	$(CC) $(CFLAGS) $(MACROS) -c $(INCLUDES) -o chkStatus.o chkStatus.c

clean:
	rm -f *.o

realclean: 
	rm -f *.o 





